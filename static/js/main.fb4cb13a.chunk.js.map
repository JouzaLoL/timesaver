{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx"],"names":["FileInput","props","className","checked","htmlFor","name","toLowerCase","icon","id","type","App","videoRef","state","videoName","videoSrc","subtitlesSrc","nonDialogueSpeed","dialogueSpeed","totalLength","dialogueLength","cues","createRef","getSavedTime","bind","setTimeout","Array","from","current","textTracks","dialogueDuration","_","sum","map","cue","endTime","startTime","setState","event","this","currentTarget","duration","onaddtrack","onSubtitlesAdded","actualNonDialogueLength","actualLength","Boolean","accept","onChange","e","target","files","URL","createObjectURL","VTTConverter","getURL","then","url","catch","console","error","toFixed","Math","round","value","step","min","max","Number","ref","controls","src","onTimeUpdate","isInCue","find","currentTime","playbackRate","onLoadedMetadata","label","kind","srcLang","default","React","Component","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fb4cb13a.chunk.js","sourcesContent":["import React, { createRef } from \"react\";\nimport _ from \"lodash\";\n// @ts-ignore\nimport VTTConverter from \"srt-webvtt\";\n\nfunction FileInput(props: React.ComponentProps<\"input\"> & { icon: string }) {\n\treturn (\n\t\t<>\n\t\t\t<label\n\t\t\t\tclassName={`hover:bg-gray-800 hover:cursor-pointer\n\t\t\t\t\t\t\t bg-gray-700 px-3 py-2 rounded leading-normal ${\n\t\t\t\t\tprops.checked\n\t\t\t\t\t\t? \"hover:bg-green-400 bg-green-300 text-green-800\"\n\t\t\t\t\t\t: \"\"\n\t\t\t\t}`}\n\t\t\t\thtmlFor={props.name?.toLowerCase()}\n\t\t\t>\n\t\t\t\t{`${props.checked ? \"âœ… \" : props.icon}${props.name}`}\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tid={props.name?.toLowerCase()}\n\t\t\t\tname={props.name?.toLowerCase()}\n\t\t\t\tclassName=\"hidden\"\n\t\t\t\ttype=\"file\"\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\ninterface State {\n\tvideoName: string | null;\n\tvideoSrc: string;\n\tsubtitlesSrc: string;\n\tnonDialogueSpeed: number;\n\tdialogueSpeed: number;\n\ttotalLength: number;\n\tdialogueLength: number;\n\tcues: TextTrackCue[];\n}\n\nclass App extends React.Component<any, State> {\n\tprivate readonly videoRef: React.RefObject<HTMLVideoElement>;\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tvideoName: null,\n\t\t\tvideoSrc: \"\",\n\t\t\tsubtitlesSrc: \"\",\n\t\t\tnonDialogueSpeed: 1.5,\n\t\t\tdialogueSpeed: 1,\n\t\t\ttotalLength: 0,\n\t\t\tdialogueLength: 0,\n\t\t\tcues: []\n\t\t};\n\t\tthis.videoRef = createRef();\n\t\tthis.getSavedTime = this.getSavedTime.bind(this);\n\t}\n\n\tonSubtitlesAdded() {\n\t\tsetTimeout(() => {\n\t\t\tconst cues = Array.from(this.videoRef.current?.textTracks[0].cues ?? []);\n\n\t\t\tconst dialogueDuration = _.sum(\n\t\t\t\tcues.map(cue => {\n\t\t\t\t\treturn cue.endTime - cue.startTime;\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tthis.setState({\n\t\t\t\tdialogueLength: dialogueDuration,\n\t\t\t\tcues\n\t\t\t});\n\t\t}, 500);\n\t}\n\n\tonLoadedMetadata(event: React.SyntheticEvent<HTMLVideoElement>) {\n\t\tthis.setState({\n\t\t\ttotalLength: event.currentTarget.duration\n\t\t});\n\n\t\tevent.currentTarget.textTracks.onaddtrack = this.onSubtitlesAdded.bind(this);\n\t}\n\n\tgetSavedTime() {\n\t\tconst nonDialogueLength = this.state.totalLength - this.state.dialogueLength;\n\t\tconst actualNonDialogueLength = nonDialogueLength / this.state.nonDialogueSpeed;\n\n\t\tconst actualDialogueLength = this.state.dialogueLength / this.state.dialogueSpeed;\n\n\t\tconst actualLength = actualDialogueLength + actualNonDialogueLength;\n\n\t\treturn this.state.totalLength - actualLength;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"h-screen flex flex-col justify-between\">\n\t\t\t\t<nav className=\"text-gray-200 flex items-center justify-between p-5\">\n\t\t\t\t\t<h1 className=\"text-gray-100 text-2xl overflow-hidden w-1/3\">\n\t\t\t\t\t\t{this.state.videoName ?? \"Timesaver\"}\n\t\t\t\t\t</h1>\n\t\t\t\t\t<div className=\"w-1/3 flex justify-center items-center\">\n\t\t\t\t\t\t<span className=\"mr-5\">\n\t\t\t\t\t\t\t<FileInput\n\t\t\t\t\t\t\t\tname={\"Media\"}\n\t\t\t\t\t\t\t\ticon={\"â–¶ \"}\n\t\t\t\t\t\t\t\tchecked={Boolean(this.state.videoName)}\n\t\t\t\t\t\t\t\taccept={\"video/*\"}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tif (e.target.files) {\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tvideoName: e.target.files[0].name,\n\t\t\t\t\t\t\t\t\t\t\tvideoSrc: URL.createObjectURL(e.target.files[0])\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<FileInput\n\t\t\t\t\t\t\tname={\"Subtitles\"}\n\t\t\t\t\t\t\ticon={\"ðŸ“„ \"}\n\t\t\t\t\t\t\tchecked={Boolean(this.state.subtitlesSrc)}\n\t\t\t\t\t\t\taccept={\"text/srt .srt\"}\n\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\tif (e.target.files) {\n\t\t\t\t\t\t\t\t\tconst converter = new VTTConverter(e.target.files[0]);\n\t\t\t\t\t\t\t\t\tconverter\n\t\t\t\t\t\t\t\t\t\t.getURL()\n\t\t\t\t\t\t\t\t\t\t.then((url: string) => {\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\tsubtitlesSrc: url\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.catch((e: Error) => {\n\t\t\t\t\t\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"flex items-center w-1/3 justify-end\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tSaved time:{\" \"}\n\t\t\t\t\t\t\t{((this.getSavedTime() / this.state.totalLength) * 100).toFixed(2)}% ~{\" \"}\n\t\t\t\t\t\t\t{Math.round(this.getSavedTime() / 60)} minutes\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"flex flex-col items-center justify-center mr-5\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span className=\"text-gray-400 text-sm mr-1\">Dialogue speed</span>\n\t\t\t\t\t\t\t\t<span className=\"text-xl font-semibold\">\n\t\t\t\t\t\t\t\t\t{this.state.dialogueSpeed.toFixed(1)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\t\tvalue={this.state.dialogueSpeed}\n\t\t\t\t\t\t\t\tstep={0.1}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tmax={5}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tdialogueSpeed: Number(e.target.value)\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"flex flex-col items-center justify-center mr-5\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<span className=\"text-gray-400 text-sm mr-1\">\n\t\t\t\t\t\t\t\t\tNon-dialogue speed\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"text-xl font-semibold\">\n\t\t\t\t\t\t\t\t\t{this.state.nonDialogueSpeed.toFixed(1)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\t\tvalue={this.state.nonDialogueSpeed}\n\t\t\t\t\t\t\t\tstep={0.1}\n\t\t\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\t\t\tmax={5}\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tthis.setState({ nonDialogueSpeed: Number(e.target.value) });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\t\t\t\t<main className=\"text-gray-100 flex flex-col justify-center items-center\">\n\t\t\t\t\t{this.state.videoSrc ? (\n\t\t\t\t\t\t<div className=\"rounded p-5 overflow-hidden\">\n\t\t\t\t\t\t\t<video\n\t\t\t\t\t\t\t\tref={this.videoRef}\n\t\t\t\t\t\t\t\tcontrols\n\t\t\t\t\t\t\t\tsrc={this.state.videoSrc}\n\t\t\t\t\t\t\t\tonTimeUpdate={e => {\n\t\t\t\t\t\t\t\t\tconst isInCue = this.state.cues.find(\n\t\t\t\t\t\t\t\t\t\tcue =>\n\t\t\t\t\t\t\t\t\t\t\tcue.startTime - 1 <= e.currentTarget.currentTime &&\n\t\t\t\t\t\t\t\t\t\t\tcue.endTime >= e.currentTarget.currentTime + 1\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\te.currentTarget.playbackRate = isInCue\n\t\t\t\t\t\t\t\t\t\t? this.state.dialogueSpeed\n\t\t\t\t\t\t\t\t\t\t: this.state.nonDialogueSpeed;\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonLoadedMetadata={this.onLoadedMetadata.bind(this)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{Boolean(this.state.subtitlesSrc) && (\n\t\t\t\t\t\t\t\t\t<track\n\t\t\t\t\t\t\t\t\t\tlabel={\"Subtitles\"}\n\t\t\t\t\t\t\t\t\t\tkind={\"subtitles\"}\n\t\t\t\t\t\t\t\t\t\tsrcLang={\"en\"}\n\t\t\t\t\t\t\t\t\t\tsrc={this.state.subtitlesSrc}\n\t\t\t\t\t\t\t\t\t\tdefault\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</video>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span className=\"my-5\">Add your media using the button above</span>\n\t\t\t\t\t)}\n\t\t\t\t</main>\n\t\t\t\t<div className=\"text-center text-gray-600 text-sm py-2\">Â© Josef Vacek</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n/* Tailwind compiled styles */\nimport \"./styles.css\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}